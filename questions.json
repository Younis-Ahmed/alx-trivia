[
    {
        "question": "How do you quit Vi?",
        "language": "Vi",
        "answersArray": [
            ":q<Return>",
            "q",
            "<ESC>"
        ],
        "correctAnswer": ":q<Return>",
        "code": ""
    },
    {
        "question": "How do you enter Command Mode in Vi?",
        "language": "Vi",
        "answersArray": [
            "Ctrl / Command + C",
            "<Return>",
            "<ESC>"
        ],
        "correctAnswer": "<ESC>",
        "code": ""
    },
    {
        "question": "Vi is included with almost every Linux distribution.",
        "language": "Vi",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "True",
        "code": ""
    },
    {
        "question": "How do you enter Insert Mode in Vi?",
        "language": "Vi",
        "answersArray": [
            "<Insert>",
            "i",
            "<Return>"
        ],
        "correctAnswer": "i",
        "code": ""
    },
    {
        "question": "What command can you use to see what changes have been staged, which haven\u2019t, and which files aren\u2019t being tracked by Git?",
        "language": "Git",
        "answersArray": [
            "git init",
            "git checkout",
            "git status"
        ],
        "correctAnswer": "git status",
        "code": ""
    },
    {
        "question": "You have the following files in your project directory: You\u2019ve edited 0-test and you want to add it to your GitHub repo. What is the correct command to add only 0-test? You should learn what each of these commands would actually do if you were to execute them!",
        "language": "Git",
        "answersArray": [
            "git add .",
            "git add 0-test",
            "git add -N 0-test"
        ],
        "correctAnswer": "git add 0-test",
        "code": "\njulien@ubuntu:/tmp/git_project$ ls\n0-test  0-test~ #0-test# file1  file2\n"
    },
    {
        "question": "Which command should you use to display the content of a file?",
        "language": "Shell",
        "answersArray": [
            "cd",
            "pwd",
            "touch",
            "ls",
            "less"
        ],
        "correctAnswer": "less",
        "code": ""
    },
    {
        "question": "Which command should you use to create a directory?",
        "language": "Shell",
        "answersArray": [
            "mv",
            "rmdir",
            "mkdir",
            "cp",
            "rm"
        ],
        "correctAnswer": "mkdir",
        "code": ""
    },
    {
        "question": "Which command should you use to list all files of your current directory?",
        "language": "Shell",
        "answersArray": [
            "cd",
            "pwd",
            "touch",
            "less",
            "ls"
        ],
        "correctAnswer": "ls",
        "code": ""
    },
    {
        "question": "Which command should you use to delete a directory?",
        "language": "Shell",
        "answersArray": [
            "rm",
            "cp",
            "rmdir",
            "mkdir",
            "mv"
        ],
        "correctAnswer": "rmdir",
        "code": ""
    },
    {
        "question": "Which command should you use to delete a file (or directory if additional argument)?",
        "language": "Shell",
        "answersArray": [
            "rm",
            "rmdir",
            "cp",
            "mkdir",
            "mv"
        ],
        "correctAnswer": "rm",
        "code": ""
    },
    {
        "question": "Which command should you use to display the current path of your current directory?",
        "language": "Shell",
        "answersArray": [
            "ls",
            "pwd",
            "less",
            "touch",
            "cd"
        ],
        "correctAnswer": "pwd",
        "code": ""
    },
    {
        "question": "Which command should you use to change directory?",
        "language": "Shell",
        "answersArray": [
            "pwd",
            "touch",
            "cd",
            "less",
            "ls"
        ],
        "correctAnswer": "cd",
        "code": ""
    },
    {
        "question": "Which command should you use to copy a file (or directory if additional argument)?",
        "language": "Shell",
        "answersArray": [
            "mv",
            "mkdir",
            "rmdir",
            "cp",
            "rm"
        ],
        "correctAnswer": "cp",
        "code": ""
    },
    {
        "question": "Which command should you use to rename or move a file (or directory)?",
        "language": "Shell",
        "answersArray": [
            "rm",
            "cp",
            "rmdir",
            "mkdir",
            "mv"
        ],
        "correctAnswer": "mv",
        "code": ""
    },
    {
        "question": "Which command should you use to create an empty file?",
        "language": "Shell",
        "answersArray": [
            "cd",
            "pwd",
            "ls",
            "less",
            "touch"
        ],
        "correctAnswer": "touch",
        "code": ""
    },
    {
        "question": "Which command should you use to display the content of a file?",
        "language": "Shell",
        "answersArray": [
            "cd",
            "pwd",
            "touch",
            "ls",
            "less"
        ],
        "correctAnswer": "less",
        "code": ""
    },
    {
        "question": "Which command should you use to create a directory?",
        "language": "Shell",
        "answersArray": [
            "mv",
            "rmdir",
            "mkdir",
            "cp",
            "rm"
        ],
        "correctAnswer": "mkdir",
        "code": ""
    },
    {
        "question": "Which command should you use to list all files of your current directory?",
        "language": "Shell",
        "answersArray": [
            "cd",
            "pwd",
            "touch",
            "less",
            "ls"
        ],
        "correctAnswer": "ls",
        "code": ""
    },
    {
        "question": "Which command should you use to delete a directory?",
        "language": "Shell",
        "answersArray": [
            "rm",
            "cp",
            "rmdir",
            "mkdir",
            "mv"
        ],
        "correctAnswer": "rmdir",
        "code": ""
    },
    {
        "question": "Which command should you use to delete a file (or directory if additional argument)?",
        "language": "Shell",
        "answersArray": [
            "rm",
            "rmdir",
            "cp",
            "mkdir",
            "mv"
        ],
        "correctAnswer": "rm",
        "code": ""
    },
    {
        "question": "Which command should you use to display the current path of your current directory?",
        "language": "Shell",
        "answersArray": [
            "ls",
            "pwd",
            "less",
            "touch",
            "cd"
        ],
        "correctAnswer": "pwd",
        "code": ""
    },
    {
        "question": "Which command should you use to change directory?",
        "language": "Shell",
        "answersArray": [
            "pwd",
            "touch",
            "cd",
            "less",
            "ls"
        ],
        "correctAnswer": "cd",
        "code": ""
    },
    {
        "question": "Which command should you use to copy a file (or directory if additional argument)?",
        "language": "Shell",
        "answersArray": [
            "mv",
            "mkdir",
            "rmdir",
            "cp",
            "rm"
        ],
        "correctAnswer": "cp",
        "code": ""
    },
    {
        "question": "Which command should you use to rename or move a file (or directory)?",
        "language": "Shell",
        "answersArray": [
            "rm",
            "cp",
            "rmdir",
            "mkdir",
            "mv"
        ],
        "correctAnswer": "mv",
        "code": ""
    },
    {
        "question": "Which command should you use to create an empty file?",
        "language": "Shell",
        "answersArray": [
            "cd",
            "pwd",
            "ls",
            "less",
            "touch"
        ],
        "correctAnswer": "touch",
        "code": ""
    },
    {
        "question": "Which of the following are valid if statements in ANSI C and Betty-compliant? (Considering a and b two variables of type int) Please select all correct answers",
        "language": "C",
        "answersArray": [
            "if {a > b}\n(\n  return {a};\n)",
            "if a > b\n{\n  return (a);\n}",
            "if (a > b)\n  return (a);",
            "if ((((((a > b))))))\n{\n  return (a);\n}",
            "if (a > b)\n{\n  return (a);\n}"
        ],
        "correctAnswer": "if (a > b)\n{\n  return (a);\n}",
        "code": "\nif {a > b}\n(\n  return {a};\n)\n"
    },
    {
        "question": "What is the size of the char data type?",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "1 byte",
            "8 bytes",
            "2 bytes"
        ],
        "correctAnswer": "1 byte",
        "code": ""
    },
    {
        "question": "What is the size of the unsigned int data type?",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "1 byte",
            "8 bytes",
            "2 bytes"
        ],
        "correctAnswer": "4 bytes",
        "code": ""
    },
    {
        "question": "What is the size of the float data type?",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "1 byte",
            "8 bytes",
            "2 bytes"
        ],
        "correctAnswer": "4 bytes",
        "code": ""
    },
    {
        "question": "Which of the following are valid while or do/while statements in ANSI C and Betty-compliant? (Considering a and b two variables of type int) Please select all correct answers",
        "language": "C",
        "answersArray": [
            "a = 0;\nwhile (a < b)\n(\n    printf(\"%d\\n\", a);\n    a++;\n)",
            "while (a = 0; a < b; a++)\n{\n    printf(\"%d\\n\", a);\n}",
            "a = 0;\ndo {\n    printf(\"%d\\n\", a);\n    a++;\n} while (a < b);",
            "a = 0;\ndo while (a < b)\n{\n    printf(\"%d\\n\", a);\n    a++;\n}",
            "a = 0;\nwhile (a < b)\n    printf(\"%d\\n\", a++);",
            "a = 0;\nwhile (a < b)\n{\n    printf(\"%d\\n\", a);\n    a++;\n}"
        ],
        "correctAnswer": "a = 0;\nwhile (a < b)\n{\n    printf(\"%d\\n\", a);\n    a++;\n}",
        "code": "\na = 0;\nwhile (a < b)\n(\n    printf(\"%d\\n\", a);\n    a++;\n)\n"
    },
    {
        "question": "Which of the following are valid for statements in ANSI C and Betty-compliant? (Considering a and b two variables of type int) Please select all correct answers",
        "language": "C",
        "answersArray": [
            "for (int a = 0; a < b; a++)\n{\n    printf(\"%d\\n\", a);\n}",
            "for (a = 0; a < b; a++)\n{\n    printf(\"%d\\n\", a);\n}",
            "a = 0;\nfor (; a < b;)\n{\n    printf(\"%d\\n\", a++);\n}",
            "a = 0;\nfor (a < b;;)\n{\n    printf(\"%d\\n\", a++);\n}",
            "for (a = 0; a < b; a++)\n    printf(\"%d\\n\", a);"
        ],
        "correctAnswer": "for (a = 0; a < b; a++)\n    printf(\"%d\\n\", a);",
        "code": "\nfor (int a = 0; a < b; a++)\n{\n    printf(\"%d\\n\", a);\n}\n"
    },
    {
        "question": "What is the ASCII value of J?",
        "language": "C",
        "answersArray": [
            "74",
            "70",
            "76",
            "72"
        ],
        "correctAnswer": "74",
        "code": ""
    },
    {
        "question": "What is the result of 12 % 3?",
        "language": "C",
        "answersArray": [
            "2",
            "0",
            "3",
            "1"
        ],
        "correctAnswer": "0",
        "code": ""
    },
    {
        "question": "What is the ASCII value of A?",
        "language": "C",
        "answersArray": [
            "12",
            "97",
            "1",
            "65"
        ],
        "correctAnswer": "65",
        "code": ""
    },
    {
        "question": "What is the result of 12 % 10?",
        "language": "C",
        "answersArray": [
            "2",
            "0",
            "3",
            "1"
        ],
        "correctAnswer": "2",
        "code": ""
    },
    {
        "question": "What is the result of 12 % 2?",
        "language": "C",
        "answersArray": [
            "0",
            "2",
            "1"
        ],
        "correctAnswer": "0",
        "code": ""
    },
    {
        "question": "What is the result of 89 % 7?",
        "language": "C",
        "answersArray": [
            "3",
            "0",
            "5",
            "2"
        ],
        "correctAnswer": "5",
        "code": ""
    },
    {
        "question": "Which of these loop statements don\u2019t exist?",
        "language": "C",
        "answersArray": [
            "loop_to",
            "for",
            "foreach",
            "each",
            "do... while",
            "while"
        ],
        "correctAnswer": "each",
        "code": ""
    },
    {
        "question": "What is the ASCII value of a?",
        "language": "C",
        "answersArray": [
            "12",
            "97",
            "1",
            "65"
        ],
        "correctAnswer": "97",
        "code": ""
    },
    {
        "question": "What is the ASCII value of -?",
        "language": "C",
        "answersArray": [
            "45",
            "47",
            "3"
        ],
        "correctAnswer": "45",
        "code": ""
    },
    {
        "question": "What is the ASCII value of 5?",
        "language": "C",
        "answersArray": [
            "50",
            "5",
            "53"
        ],
        "correctAnswer": "53",
        "code": ""
    },
    {
        "question": "What is the ASCII value of 0?",
        "language": "C",
        "answersArray": [
            "79",
            "48",
            "0"
        ],
        "correctAnswer": "48",
        "code": ""
    },
    {
        "question": "What is the output of the following piece of code?",
        "language": "C",
        "answersArray": [
            "0011223344",
            "0112233445",
            "0123456789"
        ],
        "correctAnswer": "0112233445",
        "code": "\nint i;\n\ni = 0;\nwhile (i < 10)\n{\n    i++;\n    printf(\"%d\", i / 2);\n}\n"
    },
    {
        "question": "What is the return value of the following function?",
        "language": "C",
        "answersArray": [
            "10",
            "0",
            "0123456789",
            "9"
        ],
        "correctAnswer": "10",
        "code": "\nint some_function(void)\n{\n    int i;\n\n    for (i = 0; i < 10; i++)\n    {\n        printf(\"%d\", i);\n    }\n    return(i);\n}\n"
    },
    {
        "question": "What is the output of the following piece of code?",
        "language": "C",
        "answersArray": [
            "0101010101",
            "1010101010",
            "0123456789"
        ],
        "correctAnswer": "0101010101",
        "code": "\nint i;\n\ni = 0;\nwhile (i < 10)\n{\n    printf(\"%d\", i % 2);\n    i++;\n}\n"
    },
    {
        "question": "What is the return value of the following function?",
        "language": "C",
        "answersArray": [
            "12",
            "402",
            "98"
        ],
        "correctAnswer": "98",
        "code": "\nint some_function(void)\n{\n    printf(\"%d\", 12);\n    return (98);\n}\n"
    },
    {
        "question": "What is the output of the following piece of code?",
        "language": "C",
        "answersArray": [
            "48495051525354555657",
            "School",
            "0123456789"
        ],
        "correctAnswer": "0123456789",
        "code": "\nint i;\n\nfor (i = 48; i < 58; i++)\n{\n    printf(\"%c\", i);\n}\n"
    },
    {
        "question": "What is the output of the following piece of code?",
        "language": "C",
        "answersArray": [
            "0123456789",
            "024681012141618",
            "2468101214161820"
        ],
        "correctAnswer": "024681012141618",
        "code": "\nint i;\n\nfor (i = 0; i < 10; i++)\n{\n    printf(\"%d\", i * 2);\n}\n"
    },
    {
        "question": "What is the output of the following piece of code?",
        "language": "C",
        "answersArray": [
            "9876543210",
            "87654321",
            "987654321",
            "876543210"
        ],
        "correctAnswer": "876543210",
        "code": "\nint i;\n\ni = 9;\nwhile (i--)\n{\n    printf(\"%d\", i);\n}\n"
    },
    {
        "question": "What is the output of the following piece of code?",
        "language": "C",
        "answersArray": [
            "876543210",
            "87654321",
            "987654321",
            "9876543210"
        ],
        "correctAnswer": "87654321",
        "code": "\nint i;\n\ni = 9;\nwhile (--i)\n{\n    printf(\"%d\", i);\n}\n"
    },
    {
        "question": "What is the output of the following piece of code?",
        "language": "C",
        "answersArray": [
            "-9-8-7-6-5-4-3-2-10",
            "9876543210",
            "-9-8-7-6-5-4-3-2-1",
            "987654321"
        ],
        "correctAnswer": "987654321",
        "code": "\nint i;\n\ni = -9;\nwhile (i < 0)\n{\n    printf(\"%d\", -i);\n    i++;\n}\n"
    },
    {
        "question": "What is the identifier to print an address with printf?",
        "language": "C",
        "answersArray": [
            "%p",
            "%a",
            "%x",
            "%d"
        ],
        "correctAnswer": "%p",
        "code": ""
    },
    {
        "question": "What is the value of n after the following code is executed?",
        "language": "C",
        "answersArray": [
            "99",
            "0",
            "402",
            "98"
        ],
        "correctAnswer": "98",
        "code": "\nint n = 98;\nint *p = &n;\n\np = 402;\n"
    },
    {
        "question": "We declare the following variable What is the size in memory of the variable arr?",
        "language": "C",
        "answersArray": [
            "32 bytes",
            "4 bytes",
            "8 bytes",
            "20 bytes",
            "10 bytes",
            "5 bytes"
        ],
        "correctAnswer": "20 bytes",
        "code": "\nint arr[5];\n"
    },
    {
        "question": "What is the size of a pointer to an int (on a 64-bit architecture)",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "1 byte",
            "8 bytes",
            "2 bytes"
        ],
        "correctAnswer": "8 bytes",
        "code": ""
    },
    {
        "question": "What is the value of n after the following code is executed?",
        "language": "C",
        "answersArray": [
            "99",
            "0",
            "402",
            "98"
        ],
        "correctAnswer": "402",
        "code": "\nint n = 98;\nint *p = &n;\n\n*p = 402;\n"
    },
    {
        "question": "What is the value of n after the following code is executed?",
        "language": "C",
        "answersArray": [
            "99",
            "0",
            "402",
            "98"
        ],
        "correctAnswer": "98",
        "code": "\nint n = 98;\nint *p = &n;\n"
    },
    {
        "question": "What is the value of n after the following code is executed?",
        "language": "C",
        "answersArray": [
            "99",
            "0",
            "402",
            "98"
        ],
        "correctAnswer": "98",
        "code": "\nint n = 98;\nint *p = &n;\n\n*p++;\n"
    },
    {
        "question": "What is the size of a pointer to a char (on a 64-bit architecture)",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "1 byte",
            "8 bytes",
            "2 bytes"
        ],
        "correctAnswer": "8 bytes",
        "code": ""
    },
    {
        "question": "If we have a variable called var of type int, how can we get its address in memory?",
        "language": "C",
        "answersArray": [
            "*var",
            "&var",
            "*(var)"
        ],
        "correctAnswer": "&var",
        "code": ""
    },
    {
        "question": "Is it possible to declare a pointer to a pointer?",
        "language": "C",
        "answersArray": [
            "Yes",
            "It depends on the type the pointer is pointing to",
            "No"
        ],
        "correctAnswer": "Yes",
        "code": ""
    },
    {
        "question": "What happens when one tries to access an illegal memory location?",
        "language": "C",
        "answersArray": [
            "The computer shuts down",
            "The operation is ignored",
            "There\u2019s a chance for the computer to catch fire, and sometimes even explode",
            "Segmentation fault"
        ],
        "correctAnswer": "Segmentation fault",
        "code": ""
    },
    {
        "question": "The process of getting the value that is stored in the memory location pointed to by a pointer is called:",
        "language": "C",
        "answersArray": [
            "Dereferencing",
            "Pointing",
            "Casting",
            "Accessing"
        ],
        "correctAnswer": "Dereferencing",
        "code": ""
    },
    {
        "question": "We declare the following variable What is the equivalent of typing arr[2]?",
        "language": "C",
        "answersArray": [
            "arr + 2",
            "*(arr + 2)",
            "*arr + 2"
        ],
        "correctAnswer": "*(arr + 2)",
        "code": "\nint arr[5];\n"
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "98 Battery street, San Francisco",
            "\u201c98 Battery street, San Francisco\u201d",
            "San Francisco Battery street, 98",
            "8 Battery street, San"
        ],
        "correctAnswer": "98 Battery street, San Francisco",
        "code": "\n>>> print(f\"{98} Battery street, {'San Francisco'}\")\n"
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "Python",
            "on",
            "is",
            "si",
            "nohtyP"
        ],
        "correctAnswer": "is",
        "code": "\n>>> a = \"Python is cool\"\n>>> print(a[7:-5])\n"
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "Holberton school",
            "Holberton",
            "\u2018Holberton school\u2019",
            "\u201cHolberton school\u201d"
        ],
        "correctAnswer": "Holberton school",
        "code": "\n>>> print(\"Holberton school\")\n"
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "o",
            "ol",
            "Nothing",
            "l"
        ],
        "correctAnswer": "o",
        "code": "\n>>> a = \"Python is cool\"\n>>> print(a[-2])\n"
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "cool",
            "Python i",
            "is cool",
            "Python is"
        ],
        "correctAnswer": "is cool",
        "code": "\n>>> a = \"Python is cool\"\n>>> print(a[7:])\n"
    },
    {
        "question": "Who created Python?",
        "language": "Python",
        "answersArray": [
            "Julien Barbier",
            "Guido van Rossum",
            "Yukihiro Matsumoto"
        ],
        "correctAnswer": "Guido van Rossum",
        "code": ""
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "9 Battery street",
            "98 Battery street",
            "8 Battery street",
            "f\"98 Battery street\""
        ],
        "correctAnswer": "98 Battery street",
        "code": "\n>>> print(f\"{98} Battery street\")\n"
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "Python is",
            "Python",
            "Python is cool",
            "Pytho"
        ],
        "correctAnswer": "Python",
        "code": "\n>>> a = \"Python is cool\"\n>>> print(a[0:6])\n"
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "Python is",
            "Pytho",
            "is cool",
            "Python"
        ],
        "correctAnswer": "Python",
        "code": "\n>>> a = \"Python is cool\"\n>>> print(a[:6])\n"
    },
    {
        "question": "What does this command line print?",
        "language": "Python",
        "answersArray": [
            "o",
            "P",
            "h",
            "n"
        ],
        "correctAnswer": "o",
        "code": "\n>>> a = \"Python is cool\"\n>>> print(a[4])\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Holberton",
            "School"
        ],
        "correctAnswer": "Holberton",
        "code": "\nif 12 == 48/3 or 12 is 12:\n    print(\"Holberton\")\nelse:\n    print(\"School\")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "4 6 8 10 12 14 16 18",
            "2 3 4 5 6 7 8 9 10",
            "2 4 6 8",
            "2 3 4 5 6 7 8 9"
        ],
        "correctAnswer": "2 4 6 8",
        "code": "\nfor i in range(2, 10, 2):\n    print(i, end=\" \")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Holberton",
            "School"
        ],
        "correctAnswer": "Holberton",
        "code": "\nif 12 == 48/4:\n    print(\"Holberton\")\nelse:\n    print(\"School\")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "2 3 4",
            "2 4",
            "3 4",
            "2 3"
        ],
        "correctAnswer": "2 3",
        "code": "\nfor i in range(2, 4):\n    print(i, end=\" \")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Holberton",
            "School"
        ],
        "correctAnswer": "Holberton",
        "code": "\nif True:\n    print(\"Holberton\")\nelse:\n    print(\"School\")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Holberton",
            "School"
        ],
        "correctAnswer": "School",
        "code": "\nif 12 == 48/4 and False:\n    print(\"Holberton\")\nelse:\n    print(\"School\")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Holberton",
            "School",
            "C is fun"
        ],
        "correctAnswer": "C is fun",
        "code": "\na = 12\nif a < 2:\n    print(\"Holberton\")\nelif a % 2 == 0:\n    print(\"C is fun\")\nelse:\n    print(\"School\")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "0 1 2 3",
            "1 2 3 4",
            "0 1 2 3 4",
            "1 2 3"
        ],
        "correctAnswer": "0 1 2 3",
        "code": "\nfor i in range(4):\n    print(i, end=\" \")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Holberton",
            "School",
            "C is fun"
        ],
        "correctAnswer": "Holberton",
        "code": "\na = 12\nif a > 2:\n    if a % 2 == 0:\n        print(\"Holberton\")\n    else:\n        print(\"C is fun\")\nelse:\n    print(\"School\")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Counter: 12",
            "Counter: 101",
            "Counter: 89"
        ],
        "correctAnswer": "Counter: 12",
        "code": "\n>>> def my_function(counter=89):\n>>>     print(\"Counter: {}\".format(counter))\n>>> \n>>> my_function(12)\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "function my_function at \u2026",
            "\u201cIn my function\u201d",
            "Nothing",
            "In my function"
        ],
        "correctAnswer": "function my_function at \u2026",
        "code": "\n>>> def my_function():\n>>>     print(\"In my function\")\n>>> \n>>> my_function\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "function my_function at \u2026",
            "\u201cIn my function\u201d",
            "Nothing",
            "In my function"
        ],
        "correctAnswer": "In my function",
        "code": "\n>>> def my_function():\n>>>     print(\"In my function\")\n>>> \n>>> my_function()\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Counter: counter",
            "Counter: 12",
            "Counter: c"
        ],
        "correctAnswer": "Counter: 12",
        "code": "\n>>> def my_function(counter):\n>>>     print(\"Counter: {}\".format(counter))\n>>> \n>>> my_function(12)\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "90",
            "1",
            "891",
            "89"
        ],
        "correctAnswer": "90",
        "code": "\n>>> def my_function(counter=89):\n>>>     return counter + 1\n>>> \n>>> print(my_function())\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Counter: 12",
            "Counter: 101",
            "Counter: 89"
        ],
        "correctAnswer": "Counter: 89",
        "code": "\n>>> def my_function(counter=89):\n>>>     print(\"Counter: {}\".format(counter))\n>>> \n>>> my_function()\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "6",
            "2",
            "8",
            "4"
        ],
        "correctAnswer": "4",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> len(a)\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "[1, 2, 3, 4]",
            "[1]",
            "b",
            "a",
            "[1, 2, 10, 4]"
        ],
        "correctAnswer": "[1, 2, 10, 4]",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> b = a\n>>> a[2] = 10\n>>> a\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "4",
            "-1",
            "[4, 3, 2, 1]",
            "2"
        ],
        "correctAnswer": "4",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> a[-1]\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "[1, 2, 3, 4]",
            "[1]",
            "b",
            "a",
            "[1, 2, 10, 4]"
        ],
        "correctAnswer": "[1, 2, 10, 4]",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> b = a\n>>> a[2] = 10\n>>> b\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "1",
            "[1, 2, 3, 4]",
            "a",
            "[1]"
        ],
        "correctAnswer": "[1, 2, 3, 4]",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> b = a\n>>> b\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "[1]",
            "1",
            "[1, 2, 3, 4]",
            "[1, 2]",
            "2"
        ],
        "correctAnswer": "1",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> a[0]\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "-3",
            "2",
            "[4, 3]"
        ],
        "correctAnswer": "2",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> a[-3]\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "[1, 2, 3]",
            "[2, 3]",
            "[1, 2]"
        ],
        "correctAnswer": "[2, 3]",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> a[1:3]\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "[1, 2, 10, 4]",
            "[1, 2, 3, 4]",
            "[1, 2, 10, 10]",
            "[1, 10, 3, 4]"
        ],
        "correctAnswer": "[1, 2, 10, 4]",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> a[2] = 10\n>>> a\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "2",
            "6",
            "5"
        ],
        "correctAnswer": "5",
        "code": "\n>>> a = [1, 2, 3, 4]\n>>> a.append(5)\n>>> len(a)\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "0",
            "\u2018age\u2019",
            "89",
            "Nothing"
        ],
        "correctAnswer": "0",
        "code": "\n>>> a = { 'id': 89, 'name': \"John\" }\n>>> a.get('age', 0)\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "1 2 3",
            "1 2 3 4",
            "0 1 2 3"
        ],
        "correctAnswer": "1 2 3",
        "code": "\n>>> for i in range(1, 4):\n>>>     print(i, end=\" \")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "0 1 2 3",
            "Hello Holberton School 98",
            "1 2 3 4"
        ],
        "correctAnswer": "Hello Holberton School 98",
        "code": "\n>>> for i in [\"Hello\", \"Holberton\", \"School\", 98]:\n>>>     print(i, end=\" \")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "a[\u2018id\u2019]",
            "id",
            "John",
            "89",
            "\u2018id\u2019"
        ],
        "correctAnswer": "89",
        "code": "\n>>> a = { 'id': 89, 'name': \"John\" }\n>>> a.get('id')\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "1 2 3",
            "0 1 2 3",
            "1 2 3 4",
            "0 1 2 3 5"
        ],
        "correctAnswer": "1 2 3 4",
        "code": "\n>>> for i in [1, 2, 3, 4]:\n>>>     print(i, end=\" \")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "1 2 3",
            "0 1 2",
            "0 1 2 3"
        ],
        "correctAnswer": "0 1 2",
        "code": "\n>>> for i in range(0, 3):\n>>>     print(i, end=\" \")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "1 3 4 2",
            "0 1 2 3",
            "1 3 4 2 0",
            "1 2 3 4"
        ],
        "correctAnswer": "1 3 4 2",
        "code": "\n>>> for i in [1, 3, 4, 2]:\n>>>     print(i, end=\" \")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "a[\u2018id\u2019]",
            "id",
            "John",
            "89",
            "\u2018id\u2019"
        ],
        "correctAnswer": "89",
        "code": "\n>>> a = { 'id': 89, 'name': \"John\" }\n>>> a['id']\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "89",
            "\u2018age\u2019",
            "Nothing",
            "12",
            "Not found"
        ],
        "correctAnswer": "Nothing",
        "code": "\n>>> a = { 'id': 89, 'name': \"John\" }\n>>> a.get('age')\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "[1, 2, 3, 4]",
            "4",
            "[3]",
            "3",
            "[4]"
        ],
        "correctAnswer": "4",
        "code": "\n>>> a = { 'id': 89, 'name': \"John\", 'projects': [1, 2, 3, 4] }\n>>> a.get('projects')[3]\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "Amy",
            "89",
            "Nothing",
            "Bob",
            "[ { \u2018id\u2019: 82, \u2018name\u2019: \u201cBob\u201d }, { \u2018id\u2019: 83, \u2018name\u2019: \u201cAmy\u201d } ]"
        ],
        "correctAnswer": "Amy",
        "code": "\n>>> a = { 'id': 89, 'name': \"John\", 'projects': [1, 2, 3, 4], 'friends': [ { 'id': 82, 'name': \"Bob\" }, { 'id': 83, 'name': \"Amy\" } ] }\n>>> a.get('friends')[-1].get(\"name\")\n"
    },
    {
        "question": "What do these lines print?",
        "language": "Python",
        "answersArray": [
            "[1]",
            "\u2018projects\u2019",
            "Nothing",
            "list",
            "[1, 2, 3, 4]"
        ],
        "correctAnswer": "[1, 2, 3, 4]",
        "code": "\n>>> a = { 'id': 89, 'name': \"John\", 'projects': [1, 2, 3, 4] }\n>>> a.get('projects')\n"
    },
    {
        "question": "What is wrong with the following code?",
        "language": "C",
        "answersArray": [
            "The array array is not entirely initialized",
            "Nothing is wrong",
            "It is not possible to access array[n]",
            "It is impossible to declare the variable array this way"
        ],
        "correctAnswer": "It is not possible to access array[n]",
        "code": "\nint n = 5;\nint array[5];\nint i = 3;\n\narray[n] = i;\n"
    },
    {
        "question": "What is wrong with the following code?",
        "language": "C",
        "answersArray": [
            "The array array is not entirely initialized",
            "Nothing is wrong",
            "It is not possible to access array[n]",
            "It is impossible to declare the variable array this way"
        ],
        "correctAnswer": "Nothing is wrong",
        "code": "\nint n = 5;\nint array[10];\nint i = 3;\n\narray[n] = i;\n"
    },
    {
        "question": "What is the type of var?",
        "language": "C",
        "answersArray": [
            "string",
            "int *",
            "char *"
        ],
        "correctAnswer": "char *",
        "code": "\nvar = \"Best\";\n"
    },
    {
        "question": "What is wrong with the following code?",
        "language": "C",
        "answersArray": [
            "The array array is not entirely initialized",
            "Nothing is wrong",
            "It is not possible to access array[n]",
            "It is impossible to declare the variable array this way"
        ],
        "correctAnswer": "It is impossible to declare the variable array this way",
        "code": "\nint n = 5;\nint array[n];\nint i = 3;\n\narray[n] = i;\n"
    },
    {
        "question": "What is/are the difference(s) between the two following variables? (Except their names)",
        "language": "C",
        "answersArray": [
            "The first one points to 0, the second one points to a 0-byte",
            "They are the same",
            "The second one can be dereferenced, not the first one",
            "The first one can be dereferenced, not the second one",
            "The first one points to a 0-byte, the second one points to 0"
        ],
        "correctAnswer": "The first one points to a 0-byte, the second one points to 0",
        "code": "\nchar *s1 = \"\";\nchar *s2 = NULL;\n"
    },
    {
        "question": "What happens when one tries to dereference a pointer to NULL?",
        "language": "C",
        "answersArray": [
            "Kernel panic",
            "Nothing",
            "World War Z",
            "Segmentation fault"
        ],
        "correctAnswer": "Segmentation fault",
        "code": ""
    },
    {
        "question": "Why is it important to reserve enough space for an extra character when declaring/allocating a string?",
        "language": "C",
        "answersArray": [
            "For the null byte (end of string)",
            "In case we need one",
            "For fun",
            "For memory alignment"
        ],
        "correctAnswer": "For the null byte (end of string)",
        "code": ""
    },
    {
        "question": "In this following code, what is the value of a[3][0]?",
        "language": "C",
        "answersArray": [
            "{7, 8}",
            "7",
            "5",
            "8"
        ],
        "correctAnswer": "7",
        "code": "\nint a[5][2] = {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}};\n"
    },
    {
        "question": "What is stored inside a pointer to a pointer to an int?",
        "language": "C",
        "answersArray": [
            "An address where an int is stored",
            "An address where an address is stored",
            "An int"
        ],
        "correctAnswer": "An address where an address is stored",
        "code": ""
    },
    {
        "question": "What is the size of p in this code?",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "16 bytes",
            "8 bytes"
        ],
        "correctAnswer": "8 bytes",
        "code": "\nint **p;\n"
    },
    {
        "question": "What is the size of *p in this code?",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "16 bytes",
            "8 bytes"
        ],
        "correctAnswer": "4 bytes",
        "code": "\nint *p;\n"
    },
    {
        "question": "What is the size of p in this code?",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "16 bytes",
            "8 bytes"
        ],
        "correctAnswer": "8 bytes",
        "code": "\nint *p;\n"
    },
    {
        "question": "In this following code, what is the value of a[0][0]?",
        "language": "C",
        "answersArray": [
            "3",
            "1",
            "4",
            "2"
        ],
        "correctAnswer": "1",
        "code": "\nint a[5][2] = {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}};\n"
    },
    {
        "question": "In this following code, what is the value of a[1][1]?",
        "language": "C",
        "answersArray": [
            "3",
            "1",
            "4",
            "2"
        ],
        "correctAnswer": "4",
        "code": "\nint a[5][2] = {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}};\n"
    },
    {
        "question": "What is the size of *p in this code?",
        "language": "C",
        "answersArray": [
            "4 bytes",
            "16 bytes",
            "8 bytes"
        ],
        "correctAnswer": "8 bytes",
        "code": "\nint **p;\n"
    },
    {
        "question": "In this following code, what is the value of a[3][1]?",
        "language": "C",
        "answersArray": [
            "{7, 8}",
            "7",
            "8",
            "9"
        ],
        "correctAnswer": "8",
        "code": "\nint a[5][2] = {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}};\n"
    },
    {
        "question": "What does this code print?",
        "language": "C",
        "answersArray": [
            "1234",
            "01234",
            "4321",
            "43210"
        ],
        "correctAnswer": "43210",
        "code": "\nvoid print(int nb)\n{\n    if (nb < 0) \n    {\n        return;\n    }\n    printf(\"%d\", nb);\n    nb --;\n    print(nb);\n}\n\nint main(void)\n{\n    print(4);\n    return (0);\n}\n"
    },
    {
        "question": "What does this code print?",
        "language": "C",
        "answersArray": [
            "321",
            "4321",
            "3210",
            "43210"
        ],
        "correctAnswer": "4321",
        "code": "\nvoid print(int nb)\n{\n    printf(\"%d\", nb);\n    -- nb;\n    if (nb > 0) \n    {\n        print(nb);\n    }\n}\n\nint main(void)\n{\n    print(4);\n    return (0);\n}\n"
    },
    {
        "question": "What does this code print?",
        "language": "C",
        "answersArray": [
            "21",
            "012",
            "210",
            "12"
        ],
        "correctAnswer": "21",
        "code": "\nvoid print(int nb)\n{\n    printf(\"%d\", nb);\n    nb --;\n    if (nb > 0) \n    {\n        print(nb);\n    }\n}\n\nint main(void)\n{\n    print(2);\n    return (0);\n}\n"
    },
    {
        "question": "What does this code print?",
        "language": "C",
        "answersArray": [
            "345678910",
            "987654",
            "456789",
            "109876543"
        ],
        "correctAnswer": "456789",
        "code": "\nvoid print(int nb)\n{\n    printf(\"%d\", nb);\n    nb ++;\n    if (nb < 10) \n    {\n        print(nb);\n    }\n}\n\nint main(void)\n{\n    print(4);\n    return (0);\n}\n"
    },
    {
        "question": "What does this code print?",
        "language": "C",
        "answersArray": [
            "64200",
            "01234568",
            "00246"
        ],
        "correctAnswer": "00246",
        "code": "\nint print(int nb)\n{\n    if (nb < 0) \n    {\n        return (0);\n    }\n    printf(\"%d\", nb + print(nb - 1));\n    nb --;\n    return (nb);\n}\n\nint main(void)\n{\n    print(4);\n    return (0);\n}\n"
    },
    {
        "question": "What is the format of a static library?",
        "language": "C",
        "answersArray": [
            "A shared ELF file",
            "A relocatable ELF file",
            "An archive",
            "An executable ELF file"
        ],
        "correctAnswer": "An archive",
        "code": ""
    },
    {
        "question": "What is the point of using ranlib?",
        "language": "C",
        "answersArray": [
            "Create a library from a simple archive",
            "Creating an archive",
            "List the content of a library",
            "Indexing an archive"
        ],
        "correctAnswer": "Indexing an archive",
        "code": ""
    },
    {
        "question": "What command is used to create a static library from object files?",
        "language": "C",
        "answersArray": [
            "ranlib",
            "gcc",
            "nm",
            "ar",
            "ld"
        ],
        "correctAnswer": "ar",
        "code": ""
    },
    {
        "question": "What command(s) can be used to list the symbols stored in a static library?",
        "language": "C",
        "answersArray": [
            "ar",
            "nm",
            "ld",
            "ranlib"
        ],
        "correctAnswer": "nm",
        "code": ""
    },
    {
        "question": "What is argv[argc]?",
        "language": "C",
        "answersArray": [
            "The first command line argument",
            "NULL",
            "The last command line argument",
            "The program name",
            "It does not always exist"
        ],
        "correctAnswer": "NULL",
        "code": ""
    },
    {
        "question": "What is argv?",
        "language": "C",
        "answersArray": [
            "An array containing the program compilation flags",
            "An array of size argc",
            "An array containing the program command line arguments"
        ],
        "correctAnswer": "An array containing the program command line arguments",
        "code": ""
    },
    {
        "question": "What is argc?",
        "language": "C",
        "answersArray": [
            "The size of the argv array",
            "The number of command line arguments",
            "The length of the first command line argument",
            "A flag set to 1 when command line arguments are present"
        ],
        "correctAnswer": "The number of command line arguments",
        "code": ""
    },
    {
        "question": "What is argv[0]",
        "language": "C",
        "answersArray": [
            "The first command line argument",
            "NULL",
            "The program name",
            "It does not always exist"
        ],
        "correctAnswer": "The program name",
        "code": ""
    },
    {
        "question": "In the following command, what is argv[2]?",
        "language": "C",
        "answersArray": [
            "NULL",
            "My",
            "is fun",
            "My School is fun",
            "My School",
            "./argv",
            "fun",
            "is",
            "School"
        ],
        "correctAnswer": "is fun",
        "code": "\n$ ./argv \"My School\" \"is fun\"\n"
    },
    {
        "question": "In the following command, what is argv[2]?",
        "language": "C",
        "answersArray": [
            "NULL",
            "My",
            "is fun",
            "My School is fun",
            "My School",
            "./argv",
            "fun",
            "is",
            "School"
        ],
        "correctAnswer": "NULL",
        "code": "\n$ ./argv \"My School is fun\"\n"
    },
    {
        "question": "In the following command, what is argv[2]?",
        "language": "C",
        "answersArray": [
            "NULL",
            "My",
            "is fun",
            "My School is fun",
            "My School",
            "./argv",
            "fun",
            "is",
            "School"
        ],
        "correctAnswer": "School",
        "code": "\n$ ./argv My School is fun\n"
    },
    {
        "question": "How many bytes will this statement allocate? malloc(sizeof(unsigned int) * 2)",
        "language": "C",
        "answersArray": [
            "2",
            "8",
            "4"
        ],
        "correctAnswer": "8",
        "code": ""
    },
    {
        "question": "How many bytes will this statement allocate? malloc(sizeof(int) * 4)",
        "language": "C",
        "answersArray": [
            "16",
            "4",
            "32",
            "8"
        ],
        "correctAnswer": "16",
        "code": ""
    },
    {
        "question": "What is Valgrind?",
        "language": "C",
        "answersArray": [
            "It\u2019s a new step when I compile with gcc",
            "A container service",
            "It\u2019s a program to test a C program in a specific environment",
            "It\u2019s a program to validate memory allocation"
        ],
        "correctAnswer": "It\u2019s a program to validate memory allocation",
        "code": ""
    },
    {
        "question": "How many bytes will this statement allocate? malloc(sizeof(int) * 10)",
        "language": "C",
        "answersArray": [
            "40",
            "10",
            "32"
        ],
        "correctAnswer": "40",
        "code": ""
    },
    {
        "question": "How many bytes will this statement allocate? malloc(10)",
        "language": "C",
        "answersArray": [
            "4",
            "2",
            "40",
            "10"
        ],
        "correctAnswer": "10",
        "code": ""
    },
    {
        "question": "How many bytes will this statement allocate? malloc((sizeof(char) * 10) + 1)",
        "language": "C",
        "answersArray": [
            "21",
            "1",
            "11",
            "20",
            "10"
        ],
        "correctAnswer": "11",
        "code": ""
    },
    {
        "question": "How many bytes will this statement allocate? malloc(sizeof(char) * 10)",
        "language": "C",
        "answersArray": [
            "10",
            "40",
            "20"
        ],
        "correctAnswer": "10",
        "code": ""
    },
    {
        "question": "malloc returns an address",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "True",
        "code": ""
    },
    {
        "question": "The memory space reserved when calling malloc is on:",
        "language": "C",
        "answersArray": [
            "The stack",
            "The heap"
        ],
        "correctAnswer": "The heap",
        "code": ""
    },
    {
        "question": "If I want to copy the string \u201cBest School\u201d into a new space in memory, I can use this statement to reserve enough space for it (select all valid answers):",
        "language": "C",
        "answersArray": [
            "malloc(sizeof(\u201cBest School\u201d) + 1)",
            "malloc(sizeof(\u201cBest School\u201d))",
            "malloc(11)",
            "malloc(strlen(\u201cBest School\u201d) + 1)",
            "malloc(12)",
            "malloc(strlen(\u201cBest School\u201d))"
        ],
        "correctAnswer": "malloc(12)",
        "code": ""
    },
    {
        "question": "What will you see on the terminal?",
        "language": "C",
        "answersArray": [
            "It doesn\u2019t compile",
            "0",
            "Segmentation Fault",
            "98"
        ],
        "correctAnswer": "Segmentation Fault",
        "code": "\nint main(void)\n{\n    int *ptr;\n\n    *ptr = 98;\n    printf(\"%d\\n\", *ptr);\n    return (0);\n}\n"
    },
    {
        "question": "You can do this:",
        "language": "C",
        "answersArray": [
            "Yes",
            "No"
        ],
        "correctAnswer": "Yes",
        "code": "\nchar *s;\n\ns = strdup(\"Best School\");\nif (s != NULL)\n{\n    free(s);\n}\n"
    },
    {
        "question": "To allocate enough space for an array of 10 integers (on a 64bit, Linux machine), I can use:",
        "language": "C",
        "answersArray": [
            "malloc(64 * 10)",
            "malloc(10 * sizeof(int))",
            "malloc(10 * int)"
        ],
        "correctAnswer": "malloc(10 * sizeof(int))",
        "code": ""
    },
    {
        "question": "malloc returns a pointer",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "True",
        "code": ""
    },
    {
        "question": "You can do this:",
        "language": "C",
        "answersArray": [
            "Yes",
            "No"
        ],
        "correctAnswer": "No",
        "code": "\nfree(\"Best School\");\n"
    },
    {
        "question": "You can do this:",
        "language": "C",
        "answersArray": [
            "Yes",
            "No"
        ],
        "correctAnswer": "No",
        "code": "\nchar str[] = \"Best School\";\n\nfree (str);\n"
    },
    {
        "question": "What is wrong with this code:",
        "language": "C",
        "answersArray": [
            "You can\u2019t call strcpy with a string literal",
            "You don\u2019t have enough space to store the copy of the string \u201cBest School\u201d",
            "malloc can fail so we should check its return value all the time before using the pointers returned by the function.",
            "There is no comment"
        ],
        "correctAnswer": "There is no comment",
        "code": "\n\n\nint cp(void)\n{\n    char *s;\n\n    s = malloc(12);\n    strcpy(s, \"Best School\");\n    return (0);\n}\n"
    },
    {
        "question": "The preprocessor links our code with libraries.",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "False",
        "code": ""
    },
    {
        "question": "What will be the last 5 lines of the output of the command gcc -E on this code?",
        "language": "C",
        "answersArray": [
            "int main(void)\n{\n ((void *)0);\n return (0);\n}",
            "int main(void)\n{\n 0;\n return (0);\n}",
            "int main(void)\n{\n '\\0';\n return (0);\n}",
            "int main()\n{\n 0;\n return (0);\n}"
        ],
        "correctAnswer": "int main(void)\n{\n ((void *)0);\n return (0);\n}",
        "code": "\n#include <stdlib.h>\n\nint main(void)\n{\n    NULL;\n    return (EXIT_SUCCESS);\n}\n"
    },
    {
        "question": "This is the correct way to define the macro SUB:",
        "language": "C",
        "answersArray": [
            "No, it should be written this way:\n#define SUB(a, b) (a) - (b)",
            "Yes",
            "No, it should be written this way:\n#define SUB(a, b) ((a) - (b))",
            "No, it should be written this way:\n#define SUB(a, b) (a - b)"
        ],
        "correctAnswer": "No, it should be written this way:\n#define SUB(a, b) ((a) - (b))",
        "code": "\n#define SUB(a, b) a - b\n"
    },
    {
        "question": "The preprocessor generates assembly code",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "False",
        "code": ""
    },
    {
        "question": "What will be the output of this program? (on a standard 64 bits, Linux machine)",
        "language": "C",
        "answersArray": [
            "sizeof(i) = 4",
            "Segmentation Fault",
            "sizeof(i) = 8",
            "sizeof(i) = 1",
            "sizeof(i) = 5",
            "It does not compile"
        ],
        "correctAnswer": "sizeof(i) = 1",
        "code": "\n#include <stdio.h>\n#include <stdlib.h>\n\n#define int char\n\nint main(void)\n{\n    int i;\n\n    i = 5;\n    printf (\"sizeof(i) = %lu\", sizeof(i));\n    return (EXIT_SUCCESS);\n}\n"
    },
    {
        "question": "The macro __FILE__ expands to the name of the current input file, in the form of a C string constant.",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "True",
        "code": ""
    },
    {
        "question": "This code will try to allocate 1024 bytes in the heap:",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "True",
        "code": "\n#define BUFFER_SIZE 1024\nmalloc(BUFFER_SIZE)\n"
    },
    {
        "question": "NULL is a macro",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "True",
        "code": ""
    },
    {
        "question": "What does the macro TABLESIZE expand to?",
        "language": "C",
        "answersArray": [
            "1020",
            "nothing",
            "37"
        ],
        "correctAnswer": "37",
        "code": "\n#define BUFSIZE 1020\n#define TABLESIZE BUFSIZE\n#undef BUFSIZE\n#define BUFSIZE 37\n"
    },
    {
        "question": "What are the steps of compilation?",
        "language": "C",
        "answersArray": [
            "compiler 2. preprocessor 3. assembler 4. linker",
            "compiler 2. preprocessor 3. assembler 4. linker",
            "preprocessor 2.compiler 3. linker 4. assembler",
            "preprocessor 2.compiler 3. linker 4. assembler",
            "preprocessor 2.compiler 3. assembler 4. linker",
            "preprocessor 2.compiler 3. assembler 4. linker"
        ],
        "correctAnswer": "preprocessor 2.compiler 3. assembler 4. linker",
        "code": ""
    },
    {
        "question": "The preprocessor generates object code",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "False",
        "code": ""
    },
    {
        "question": "The preprocessor removes all comments",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "True",
        "code": ""
    },
    {
        "question": "What is the gcc option that runs only the preprocessor?",
        "language": "C",
        "answersArray": [
            "-cisfun",
            "-p",
            "-E",
            "-a",
            "-preprocessor",
            "-pedantic",
            "-P"
        ],
        "correctAnswer": "-E",
        "code": ""
    },
    {
        "question": "This portion of code is actually using the library stdlib.",
        "language": "C",
        "answersArray": [
            "True",
            "False"
        ],
        "correctAnswer": "False",
        "code": "\n#include <stdlib.h>\n"
    },
    {
        "question": "Why should we use include guards in our header files?",
        "language": "C",
        "answersArray": [
            "Because we said so, and we should never ask why.",
            "To avoid the problem of double inclusion when dealing with the include directive."
        ],
        "correctAnswer": "To avoid the problem of double inclusion when dealing with the include directive.",
        "code": ""
    },
    {
        "question": "Given this code: To set the member y of my variable my_point to 98, I can do (select all valid answers):",
        "language": "C",
        "answersArray": [
            "p.y = 98;",
            "my_point.y = 98;",
            "p->y = 98;",
            "(*p).y = 98;",
            "my_point->y = 98;"
        ],
        "correctAnswer": "(*p).y = 98;",
        "code": "\nstruct point {\n   int x;\n   int y;\n};\nstruct point my_point = { 3, 7 };\nstruct point *p = &my_point;\n"
    },
    {
        "question": "The general syntax for a struct declaration in C is:",
        "language": "C",
        "answersArray": [
            "True",
            "Maybe",
            "False"
        ],
        "correctAnswer": "True",
        "code": "\nstruct tag_name {\n   type member1;\n   type member2;\n   /* declare as many members as desired, but the entire structure size must be known to the compiler. */\n};\n"
    },
    {
        "question": "You should write documentation for all the structures you create",
        "language": "C",
        "answersArray": [
            "True",
            "As soon as I write my structure.",
            "I\u2019ll do it 5 minutes before the deadline when I try Betty on my header file"
        ],
        "correctAnswer": "As soon as I write my structure.",
        "code": ""
    },
